Q1: 什么是近似最近邻查找，常用的方法有哪些
A1: 面对数量级庞大的数据，基于最近邻的查找方法无法在可接受的时间内获得理想的检索效果。因此近似最近邻查找在
   牺牲可接受范围内的精度下，返回近似的近邻值，提高检索效率。

   常用的方法：哈希散列表方法和矢量量化法。我们课上主要介绍了哈希散列表法中的局部敏感哈希(LSH)的方法，其
              核心思想是，在高维空间相邻的数据经过哈希函数映射到低维空间后，落入同一个桶的概率是很大的，
              即保持局部的敏感度。因此，我们可以通过在桶内寻找相邻的元素来提高对海量数据检索的效率。
              
   基于LSH的方法：MinHashLSH适合短文本的处理；MinHashLSHEnsemble适合文本间特征维度差距较大的情况；
                 MinHashLSHForest适合长文本。


Q2: 为什么两个集合的minhash值相同的概率等于这两个集合的Jaccard相似度
A2: 
  在两个集合(S1,S2)同一位置上元素的取值可分为以下三种情况：
     A. 两个集合在该位置上均为1，
     B. 一个集合取1，另一个取0；
     C. 两个均为0。 
  假设情况A的个数为a，情况B为b，由于情况C在计算相似度时是没有意义的，因此不考虑情况C。

  集合的minhash值等于从前往后扫描该集合，第一个取值为1的索引号。而两个集合的minhash值相等，则意味着从前往
  后同时扫描两个集合，忽略情况C的前提下，情况A比B先出现，这时候，两者的minhash取值相同。通过分析可以得出，
  两个集合的minhash值相等的概率等于a/(a+b)。

  而两个集合的Jaccard相似度为两个集合对应位置上取交集比上两个集合的并集，在数值上也为a/(a+b)。

  因此两个集合的minhash值相同的概率等于这两个集合的Jaccard相似度。

Q3: SimHash在计算文档相似度的作用是怎样的？
A3: SimHash计算文档相似度：
   首先提取文档的特征，接着采用hash函数得到各个特征的哈希编码，对每一个哈希编码进行加权(一般用TF或Tfidf)，
   接着对所有特征做对应位置的加法运算，最终得到与哈希编码同维度的编码，在该编码中，大于0的位取1，其余取0，
   最终的到该文本对应的指纹(fingerprint)。

   重复以上操作，可以得到所有文档的fingerprint。接着计算fingerprint之间的汉明距离(两个文档fingerprint不
   相似的个数)，如果不相似的个数小于等于3，则认为两个文档相似。

Q4: 为什么YouTube采用期望观看时间作为评估指标
A4: YouTube的盈利模式是在免费的视频中参杂广告，因此其广告收益与用户的观看时长成正比。如果只是以点击率、播
   放率为优化目标，则训练出来的推荐系统会倾向于给用户推荐那些标题新颖、封面诱人的视频，但视频内容的可能并
   不足以吸引用户观看到广告出现的时候，因此优质的视频推荐才是Youtube盈利的关键。观看时长就是一个很好地优
   化指标，其成功地完成"增加用户播放时长"这一商业目标。
