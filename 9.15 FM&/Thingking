Q1: 实际工作中，FM和MF哪个应用的更多，为什么？
A1: 实际工作中，FM比MF常用。因为MF仅考虑了User和Item两个维度的特征，但实际工作中，还有很多维度需要我们考虑。例如季节维度，用户在夏
    季对商品A比较感兴趣，但冬季可能又喜欢商品B，因此我们需要引入其他特征，以它们的交互信息来辅助我们对用户和商品之间的关系进行挖掘。

Q2: FFM与FM有什么区别？
A2: FFM: Field FM. 即带场的因子分解机，其先将特征分组(Field)，在考虑两两特征之间的交互时，进一步挖掘场与场之间的关系。

Q3: DeepFM相比于FM解决了哪些问题，原理是怎样的?
A3: DeepFM=DeepNN+FM，利用深度神经网络对高阶特征的交互进行挖掘，解决了FM由于计算复杂度问题，只能考虑低阶(1、2阶)特征的困扰。

Q4: Surprise工具中的baseline算法原理是怎么样的？BaselineOnly和KNNBaseline有什么区别？
A4: 1.baseline算法(BaselineOnly)，即bui = mu+bu+bi，其中，bui为用户u对商品i的评分，mu为总体评分均值，bu为用户u与评分均值
      的偏差，bi为商品i与评分均值的偏差。值得注意的是，bu和bi为模型的参数，是根据评分矩阵利用ALS或SGD优化算法学习出来的。
    2.KNNBaseline所使用的场景是基于邻域的协同过滤(UserCF、ItemCF)，其在基础的KNNBasic中引入了bui(即用户和商品的评分偏差)，
      类似SVD,SVD++。

Q5: 基于领域的协同过滤都有哪些算法，请简述原理？
A5: 基于邻域的协同过滤：UserCF和ItemCF。
    UserCF：对于预测用户u对商品i的评分，先找到与用户u相似且给商品i评过分的相似用户评分列表，接着将用户间的相似度与用户评分点积求和，
            得到用户u对i的评分，遍历所有用户u未评分的商品，再根据预测的评分排序、推荐。     
    ItemCF: 对于预测用户u对商品i的评分，先找到与商品i相似且用户u评过分的商品评分列表，接着将商品相似度与用户评分点积求和，得到用户u
            对i的评分，遍历所有用户u未评分的商品，再根据预测的评分排序、推荐。
